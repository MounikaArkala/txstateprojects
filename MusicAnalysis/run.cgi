#!"C:/python26/python.exe"
#!/usr/local/bin/python


import os
import cgi

# Debug code, shouldn't be included unless testing.
import cgitb
cgitb.enable()
def intervals_to_scale(intervals, note):
    result = [note]
    for i in intervals:
        result.append((result[-1] + i) % 12)
    return result
    
print "Content-type: text/html"
print
if not os.path.exists("all_scales.txt") \
   or not os.path.exists("scales.py") \
   or not os.path.exists("filters.py") \
   or os.path.getmtime("all_scales.txt") < os.path.getmtime("scaleslib.py") \
   or os.path.getmtime("scales.py") < os.path.getmtime("scaleslib.py") \
   or os.path.getmtime("filters.py") < os.path.getmtime("filters.py"):
    #we need to recreate all_scales.txt and scales.py and filters.py, either
    #because they don't exist or because they're older.
    from scaleslib import scales
    scalenames = scales.keys()
    scalenames.sort()
    allscales_file = open("all_scales.txt", "w")
    filters_file = open("filters.py", "w")
    otherscales_file = open("scales.py", "w")
    filters_file.write("#This file is automatically generated!  Modifications will be deleted!\n")
    otherscales_file.write("# -*- coding: cp1252 -*-")
    otherscales_file.write("#This file is automatically generated!  Modifications will be deleted!\n")
    otherscales_file.write("scales = [ \\\n")
    
    #get all the possible filters into a list.
    filters = []
    for scale in scalenames:
        filters.extend(scales[scale][1])
    #remove all duplicates from the list so we have just the unique filters.
    filters = list(set(filters))
    filters.sort()
    #write out the filters list to the file.
    filters_file.write("filters = " + repr(filters))
    
    #get all the possible scales into the file.
    for scale in scalenames:
        otherscales_file.write("('%s', %s),\n" % (scale, scales[scale][0]))
    otherscales_file.write("]\n")
    
    
    for scale in scalenames:
        allscales_file.write(str(sum([2**filters.index(i) for i in scales[scale][1]])))
        allscales_file.write("\n")
        for i in range(12):
            allscales_file.write(" ".join([str(i) for i in intervals_to_scale(scales[scale][0], i)]))
            allscales_file.write("\n")
   

    allscales_file.close()
    filters_file.close()
    otherscales_file.close()

from scales import scales
out = os.popen('calcscales.exe 0 0 0 17 "0 3 7"').readlines()
for result in out:
    try:
        val = int(result)
        shift = val % 12
        print scales[int(result) / 12], shift
    except:
        print result
#print out
